% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tsDrift.R
\name{detect_sensor_drift}
\alias{detect_sensor_drift}
\title{Detect gradual sensor drift in time series water quality data}
\usage{
detect_sensor_drift(
  data,
  value_col,
  threshold_multiplier = 2,
  time_threshold_days = 5,
  overwrite = NULL
)
}
\arguments{
\item{data}{A data frame containing time series data.}

\item{value_col}{A string. The name of the column containing numeric sensor values.}

\item{threshold_multiplier}{A numeric multiplier applied to the median value to define the drift threshold. Default is 2.}

\item{time_threshold_days}{Minimum number of **continuous** days above the threshold required to flag sensor drift. Default is 5 days.}

\item{time_col}{A string. The name of the column containing POSIXct timestamps.}
}
\value{
A data frame with all original columns, a new column `cumulative_time_above_threshold`
        (in days), and an updated or added `Quality` column with `"sensor_drift"` flags.
}
\description{
This function detects sustained periods where sensor readings remain consistently
above a calculated threshold, which may indicate sensor drift. The threshold is
defined as a multiple of the median value, and drift is flagged if readings exceed
this threshold continuously for longer than a specified number of days.
}
\details{
If a column matching "quality" (case-insensitive) exists in the data, drift flags
will be written to it. Otherwise, a new column `quality` is created.
}
\note{
The input data frame (`data`) must include:

| Column Name | Type      | Description                                       |
|-------------|-----------|---------------------------------------------------|
| `<time_col>` | POSIXct   | Timestamp of each observation                     |
| `<value_col>`| numeric   | Measured sensor value                             |
| `Quality`   | character | Optional; if present, will be used/updated        |

All other columns in the input data frame will be preserved in the output.
}
\examples{
# Simulated data
set.seed(42)
ts <- seq.POSIXt(from = as.POSIXct("2024-01-01"), by = "hour", length.out = 200)
val <- c(rnorm(150, mean = 2), rep(6, 50))  # final 50 points simulate drift
df <- data.frame(ts = ts, Value = val, Quality = NA_character_)

# Apply drift detection
result <- detect_sensor_drift(df, value_col = "Value")

# Visualize
if (requireNamespace("plotly", quietly = TRUE)) {
  plotly::plot_ly(result) |>
    plotly::add_markers(
      x = ~ts,
      y = ~Value,
      type = "scatter",
      color = ~Quality
    )
}

}
